{
  "name": "Terrassa’s Buildings",
  "tagline": "Projecte GDSA",
  "body": "![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/gh-pages/images/Logo.png?raw=true)\r\n\r\nAquesta web neix a partir de l'assignatura Gestió i Distribució de Senyals Audiovisuals, on es planteja el desenvolupament d'un projecte que es basa en la cerca visual. Aquest projecte l'hem donat com a nom Terrassa's Buildings i els seus desenvolupadors són:\r\n\r\nNom i Cognom | Perfil Github | Perfil de LinkedIn\r\n------------ | ------------ | ------------\r\nMarta Barrachina | [Enllaç](https://github.com/Mmarta19) | [Enllaç](https://es.linkedin.com/in/marta-barrachina-234697117)\r\nMarta Coll| [Enllaç](https://github.com/MartaCollPol) | \r\nDavid Molina | [Enllaç](https://github.com/Damocle21) |\r\n\r\n\r\nEn concret Terrassa's Buildings és una plataforma que està implementada i desenvolupada amb el llenguatge Python. Per entendre millor el projecta, s'ha dividit aquest en sessions. En cada una de les sessions s'explica en detall els passos que s'han portat a terme per obtenir l'objectiu final.\r\n\r\n\r\nSessions | LINK\r\n------------ | -------------\r\nSessió 3 | [Extreure característiques](https://docs.google.com/presentation/d/10qN_5L64CRrDN-KxAChikhTSHKhgo5Zdgb-cuL4wFAA/edit?usp=sharing)\r\nSessió 4 | [Primer prototipus de cercador](https://docs.google.com/presentation/d/1BYy3HgLG6q_1lNq15vN7Gp8xHzMo9Y2DdIURvjgpsQ4/edit?usp=sharing)\r\n\r\n# [Sessió 3](https://docs.google.com/presentation/d/10qN_5L64CRrDN-KxAChikhTSHKhgo5Zdgb-cuL4wFAA/edit?usp=sharing)\r\n\r\nEn aquesta primera part del projecte s'ha realitzat una [Base de Dades](https://drive.google.com/file/d/0BwPBlegi0csQamhIU3YyT1o3ZGs/view?usp=sharing) amb 150 imatges diferents. Majoritàriament trobem imatges del Museu de la Ciència i la Tecnologia de Terrassa, del Mercat de la Independència. Encara així, en la base de dades també hi han imatges d'edificis desconeguts. Totes aquestes fotografies serviran d'entrenament al sistema. \r\n\r\n[MNACTEC](http://mnactec.cat/ca/) | [Mercat de la Independència](http://www.mercatdelaindependencia.cat/?doing_wp_cron=1479940928.3758389949798583984375)|Desconegut\r\n------------ | -------------  | -------------\r\n![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/gh-pages/images/1354-30624-16524.jpg?raw=true)| ![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/gh-pages/images/3311-27747-29929.jpg?raw=true) | ![] (https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/gh-pages/images/Desconegut_102.jpg?raw=true)\r\n \r\nEl sistema també farà servir 450 fotografies de diferents edificis de Terrassa, on la seva utilitat és de validació que serviran per evaluar el sistema. Aquestes imatges es poden trobar a la pàgina web del UPC [Terrassa Building 900](https://imatge.upc.edu/web/resources/terrassa-buildings-900).\r\n\r\nUn cop hem obtingut totes les imatges, és important fer una anotació d'aquestes per generar correctament la base de dades. El sistema d'anotació que s'ha utilitzat en aquest projecte és el següent:\r\n\r\n![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/gh-pages/images/Captura%20de%20pantalla%202016-11-27%20a%20les%2011.31.12.png?raw=true)\r\n\r\nTotes aquestes imatges s'han guardat en un arxiu [ZIP](https://drive.google.com/file/d/0BwPBlegi0csQamhIU3YyT1o3ZGs/view?usp=sharing).\r\n\r\nPel desenvolupament del projecta s'ha fet servir dos entorns de desenvolupament local.\r\n\r\n- [Canopy](https://www.enthought.com/products/canopy/): Entorn d'anàlisi de Python integral que proporciona més de 450 paquets de Python.\r\n\r\n- [Atom] (https://atom.io): Editor de text de software lliure en el que es pot treballar còmodament amb diferents idiomes de programació. Disposa de molts paquets descarregables que amplien les seves funcions com ara compiladors o personalitzadors. \r\n\r\nAmb aquestes dos entorns s'ha genera el primer script. Aquest es basa en l'extracció de punts d'interès d'una imatges. S'ha fet de dos extractors de característiques diferents, SURF, SIFT i ORB. A continuació podeu veure els codis realitzats agafant d'exemple, en els dos primers casos (SURF i SIFT), una imatge d'un tigre. En el cas d'ORB es fa servir una imatge de la nostre base de dades.\r\n\r\n* [SURFT](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/master/1--Keypoints/PuntsInteres_SURF.ipynb)\r\n\r\n ![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/master/1--Keypoints/figure_1.png?raw=true)\r\n\r\n\r\nUtilitzant SURFT podem observar que ens detalla els contorns més pronunciats de la imatge.\r\n\r\n* [SIFT](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/master/1--Keypoints/PuntsInteresSIFT.ipynb)\r\n\r\n![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/master/1--Keypoints/Imagen%201.png?raw=true)\r\n\r\nEn aquest cas com veiem a la imatge anterior, el resultat de l'extracció de característiques és més detallat. Sobretot en els canvis d'intensitat, és a dir, en els contorns.\r\n\r\n\r\n* [ORB](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/master/1--Keypoints/PuntsDInteresORB.ipynb)\r\n\r\n![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/Marta-C/Mercat.png?raw=true)\r\n\r\nObservem de color vermell els punts d'interés que s'han trobat a la imatge que corresponen sobretot a contorns o zones amb variacions ràpides de color(com les lletres del cartell). En aquest cas, ens podem fixar que en un dels contorns de la imatge tenim un marca generada per la funda del telèfon amb el qual s'estava capturant la imatge. Això pot ser un cas real i és per aquest motiu que ho hem volgut fer servir.\r\n\r\nLes proves d'aquest primer script també s'han realitzat a [Jupyter](http://jupyter.org). Podeu veure tot el codi realitzat a [GitHub](https://github.com/gdsa-upc/Terrassa-s-Buildings/tree/master/1--Keypoints).\r\n\r\n# [Sessió 4](https://docs.google.com/presentation/d/1BYy3HgLG6q_1lNq15vN7Gp8xHzMo9Y2DdIURvjgpsQ4/edit?usp=sharing)\r\n\r\nAquesta sessió està formada pels següents blocs:\r\n\r\n![](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/gh-pages/images/Captura%20de%20pantalla%202016-11-29%20a%20les%2022.03.21.png?raw=true)\r\n\r\n1-BUILD_DATABASE\r\nGenerar una base de dades. Ho hem implementat utilitzant la funció build_database(https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/master/1-Build_Database/BuildDatabase.py)\r\n\r\n2- FEATURE_EXTRACTION\r\nFormada per les següents funcions:\r\n\r\n* [**get_params**](https://github.com/gdsa-upc/Terrassa-s-Buildings/tree/master/2--Get_Features-4/get_params.py)\r\nUtilitzarem aquesta funció per a definir tots els peràmetres que farem servir en les pròximes funcions amb la idea de tenir un codi més ordenat. Definirem aqui des del path cap a la base de dades fins a la mida de descriptor, mida d’imatges, etc.\r\n\r\n* [**local_feature_extraction**](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/Marta-B/sessio-4/Feature-Extraction/get_local_features.py)\r\nObtenim els descriptors amb la funció local_feature_extraction(params, image).\r\nPrimer s’extreuen utilitzant el tipus de descriptor ORB pels casos en que la imatge que es llegeix de la llibreria és .jpg o .JPG, ja que, de no fer-ho obtenim un error Nontype. A continuació,  la funció resize que apliquem a les imatges per a fer-les més petites amb la idea de no saturar la memoria al compilar.\r\n\r\n\r\n* [**train_codebook**](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/David/sessi--4/Train_codebook.py) \r\nPer definir aquesta funció fem servir MiniBatchKMeans. Això és així ja que, és molt més ràpid que altres aplicacions per defecte. Ens cal limitar el nombre de features o d’imatges. \r\n\r\n\r\n* [**get_assignments**](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/David/sessi--4/Get_assignments.py)\r\nAquesta funció calcula les assignacións i es retorna un vector:  per cada descriptor quantes assignacions té. \r\n\r\n* [Build_bow](https://github.com/gdsa-upc/Terrassa-s-Buildings/blob/David/sessi--4/build_bow.py)\r\nAquesta funció crea un descriptor del mateix tamany que el número de clusters tot a zeros. Per cada entrada a l’assigment, es suma 1 al índex que toca a l’histograma. Per finalitzar, el normalitzem amb L2. \r\n\r\n* [get_features]()\r\nAquesta es la funció general, s’obra el fitxer on tenim els Id de les imatges d’entrenament/validació, s’extreuen les característiques i es crea el ‘Diccionari’, on i guardarem els descriptors per a cada imatge. Per últim, es guarda el diccionari a Features. \r\n\r\n3- RANKING\r\n\r\n4-EVALUATE_RANKING",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}